
name: Docker Image Pusher

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:
    inputs:
        source:
          description: '镜像源 (Registry)'     
          required: true
          default: 'docker.io'
        sourceimage:
          description: '源镜像 (Image)'     
          required: true
          default: ''
        destination:
          description: '目标源 (Registry)'
          required: true
          default: 'registry.cn-hangzhou.aliyuncs.com'
        destinationimage:
          description: '目标镜像 (Image)'
          required: true
          default: ''


env:
  ACR_USERNAME: ${{ secrets.ACR_USERNAME }}
  ACR_PASSWORD: ${{ secrets.ACR_PASSWORD }}
  SOURCE: ${{ inputs.source }}
  SOURCEIMAGE: ${{ inputs.sourceimage }}
  DESTINATION: ${{ inputs.destination }}
  DESTINATIONIMAGE: ${{ inputs.destinationimage }}
  NAMESPACE: ${{ secrets.NAMESPACE }}
  

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Docker Setup Buildx
        uses: docker/setup-buildx-action@v3

      - name: Maximize Build Space
        uses: easimon/maximize-build-space@master
        with:
          root-reserve-mb: 2048
          swap-size-mb: 128
          remove-dotnet: 'true'
          remove-haskell: 'true'
          # 如果空间还是不够用，可以把以下开启，清理出更多空间
          # remove-android: 'true'
          # remove-codeql: 'true'
          build-mount-path: '/var/lib/docker/'

      - name: Restart Docker
        run: sudo service docker restart

      - name: Pull Image
        run: docker pull $SOURCE/$SOURCEIMAGE

      - name: Show Images
        run: docker images
        
      - name: Docker Login
        run: echo "${ACR_PASSWORD}" | docker login --username=$ACR_USERNAME --password-stdin $DESTINATION
        
      - name: Create New Tag
        run: |
          image_id=$(docker images --filter="reference=${SOURCEIMAGE}" --format "{{.ID}}")
          docker tag $image_id $DESTINATION/$NAMESPACE/$DESTINATIONIMAGE
          
      - name: Show Images
        run: docker images

      - name: Push Image
        run: docker push $DESTINATION/$NAMESPACE/$DESTINATIONIMAGE

        
    
